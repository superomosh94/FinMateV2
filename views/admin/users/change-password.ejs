<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .password-card {
            border: none;
            border-radius: 15px;
            box-shadow: 0 5px 25px rgba(0,0,0,0.1);
            transition: transform 0.3s ease;
        }
        .password-card:hover {
            transform: translateY(-5px);
        }
        .user-avatar {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            background: linear-gradient(45deg, #667eea 0%, #764ba2 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 2rem;
            color: white;
            margin: 0 auto;
            border: 4px solid #fff;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }
        .password-strength {
            height: 8px;
            border-radius: 4px;
            margin-top: 5px;
            transition: all 0.3s ease;
        }
        .security-feature {
            border-left: 4px solid #28a745;
            padding-left: 15px;
        }
        .toast-container {
            z-index: 9999;
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <%- include('../../partials/admin-sidebar') -%>

            <!-- Main content -->
            <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4" style="margin-left: 280px;">
                <!-- Header -->
                <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                    <div>
                        <h1 class="h2">
                            <i class="fas fa-key me-2"></i>
                            Change User Password
                        </h1>
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item"><a href="/admin/dashboard">Dashboard</a></li>
                                <li class="breadcrumb-item"><a href="/admin/users">User Management</a></li>
                                <li class="breadcrumb-item"><a href="/admin/users/edit/<%= userData.id %>"><%= userData.username %></a></li>
                                <li class="breadcrumb-item active">Change Password</li>
                            </ol>
                        </nav>
                    </div>
                    <div class="btn-toolbar mb-2 mb-md-0">
                        <a href="/admin/users/edit/<%= userData.id %>" class="btn btn-outline-secondary me-2">
                            <i class="fas fa-arrow-left me-1"></i>
                            Back to User
                        </a>
                    </div>
                </div>

                <!-- Success/Error Messages -->
                <% if (locals.success) { %>
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        <i class="fas fa-check-circle me-2"></i>
                        <%= locals.success %>
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                <% } %>
                
                <% if (locals.error) { %>
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <i class="fas fa-exclamation-circle me-2"></i>
                        <%= locals.error %>
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                <% } %>

                <div class="row justify-content-center">
                    <div class="col-md-8 col-lg-6">
                        <!-- User Info Card -->
                        <div class="card password-card mb-4">
                            <div class="card-body text-center">
                                <div class="user-avatar mb-3">
                                    <i class="fas fa-user"></i>
                                </div>
                                <h4 class="card-title"><%= userData.first_name || 'No Name' %> <%= userData.last_name || '' %></h4>
                                <p class="text-muted">@<%= userData.username %></p>
                                
                                <div class="d-flex justify-content-center mb-3">
                                    <span class="badge <%= userData.is_active ? 'bg-success' : 'bg-danger' %> me-2">
                                        <i class="fas fa-circle me-1"></i>
                                        <%= userData.is_active ? 'Active' : 'Inactive' %>
                                    </span>
                                    <span class="badge bg-info">
                                        <i class="fas fa-user-tag me-1"></i>
                                        <%= userData.role_name || 'No Role' %>
                                    </span>
                                </div>

                                <div class="row text-start mt-4">
                                    <div class="col-12 mb-2">
                                        <span class="text-muted">Email:</span>
                                        <div class="fw-bold"><%= userData.email %></div>
                                    </div>
                                    <div class="col-12 mb-2">
                                        <span class="text-muted">User ID:</span>
                                        <div class="fw-bold">#<%= userData.id %></div>
                                    </div>
                                    <div class="col-12">
                                        <span class="text-muted">Last Updated:</span>
                                        <div class="fw-bold"><%= new Date(userData.updated_at).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) %></div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Password Change Form -->
                        <div class="card password-card">
                            <div class="card-header bg-primary text-white">
                                <h5 class="card-title mb-0">
                                    <i class="fas fa-lock me-2"></i>
                                    Password Management
                                </h5>
                            </div>
                            <div class="card-body">
                                <!-- Password Reset Options -->
                                <div class="row mb-4">
                                    <div class="col-md-6 mb-3">
                                        <div class="card border-primary h-100">
                                            <div class="card-body text-center">
                                                <h6 class="card-title">
                                                    <i class="fas fa-sync-alt me-2 text-primary"></i>
                                                    Quick Password Reset
                                                </h6>
                                                <p class="card-text small text-muted">
                                                    Generate a secure temporary password.
                                                </p>
                                                <button type="button" class="btn btn-outline-primary btn-sm w-100" 
                                                        onclick="generateTemporaryPassword()">
                                                    <i class="fas fa-bolt me-1"></i>
                                                    Generate Temporary Password
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <div class="card border-warning h-100">
                                            <div class="card-body text-center">
                                                <h6 class="card-title">
                                                    <i class="fas fa-shield-alt me-2 text-warning"></i>
                                                    Security Options
                                                </h6>
                                                <p class="card-text small text-muted">
                                                    Additional security features.
                                                </p>
                                                <button type="button" class="btn btn-outline-warning btn-sm w-100" 
                                                        onclick="viewPasswordPolicy()">
                                                    <i class="fas fa-info-circle me-1"></i>
                                                    View Policy
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Manual Password Change Form -->
                                <form id="passwordForm" action="/admin/users/change-password/<%= userData.id %>" method="POST">
                                    <div class="alert alert-info">
                                        <i class="fas fa-info-circle me-2"></i>
                                        <strong>Note:</strong> The user will be automatically notified about password changes via the system notifications.
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6 mb-3">
                                            <label for="new_password" class="form-label">
                                                New Password *
                                            </label>
                                            <div class="input-group">
                                                <input type="password" class="form-control" id="new_password" name="new_password" 
                                                       minlength="6" oninput="checkPasswordStrength(this.value)" required>
                                                <button type="button" class="btn btn-outline-secondary" onclick="togglePasswordVisibility('new_password')">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                            </div>
                                            <div class="password-strength mt-2" id="passwordStrength"></div>
                                            <div class="form-text">
                                                <i class="fas fa-info-circle me-1"></i>
                                                Minimum 6 characters. Include uppercase, lowercase, numbers, and symbols for stronger security.
                                            </div>
                                        </div>
                                        <div class="col-md-6 mb-3">
                                            <label for="confirm_password" class="form-label">
                                                Confirm Password *
                                            </label>
                                            <div class="input-group">
                                                <input type="password" class="form-control" id="confirm_password" name="confirm_password" required>
                                                <button type="button" class="btn btn-outline-secondary" onclick="togglePasswordVisibility('confirm_password')">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                            </div>
                                            <div class="form-text" id="passwordMatchText"></div>
                                        </div>
                                    </div>

                                    <!-- Security Features -->
                                    <div class="security-feature mb-4">
                                        <h6 class="mb-3">
                                            <i class="fas fa-shield-alt me-2 text-success"></i>
                                            Security Features
                                        </h6>
                                        <div class="row small">
                                            <div class="col-md-6 mb-2">
                                                <i class="fas fa-check text-success me-2"></i>
                                                Automatic user notification
                                            </div>
                                            <div class="col-md-6 mb-2">
                                                <i class="fas fa-check text-success me-2"></i>
                                                Password strength enforcement
                                            </div>
                                            <div class="col-md-6 mb-2">
                                                <i class="fas fa-check text-success me-2"></i>
                                                Secure password hashing
                                            </div>
                                            <div class="col-md-6 mb-2">
                                                <i class="fas fa-check text-success me-2"></i>
                                                Activity logging
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Form Actions -->
                                    <div class="d-flex justify-content-between align-items-center mt-4 p-3 bg-light rounded">
                                        <div>
                                            <span class="text-muted">
                                                <i class="fas fa-clock me-1"></i>
                                                Password last updated: 
                                                <strong><%= new Date(userData.updated_at).toLocaleDateString() %></strong>
                                            </span>
                                        </div>
                                        <div>
                                            <a href="/admin/users/edit/<%= userData.id %>" class="btn btn-outline-secondary me-2">
                                                <i class="fas fa-times me-1"></i>
                                                Cancel
                                            </a>
                                            <button type="submit" class="btn btn-warning" id="updatePasswordBtn">
                                                <i class="fas fa-key me-1"></i>
                                                Update Password
                                            </button>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>

                        <!-- Security Status Card -->
                        <div class="card password-card mt-4">
                            <div class="card-header">
                                <h6 class="card-title mb-0">
                                    <i class="fas fa-history me-2"></i>
                                    Password History & Security
                                </h6>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <h6>Security Status</h6>
                                        <div class="security-status">
                                            <div class="d-flex justify-content-between align-items-center mb-2">
                                                <span>Password Strength:</span>
                                                <span class="badge bg-secondary" id="currentPasswordStrength">Unknown</span>
                                            </div>
                                            <div class="d-flex justify-content-between align-items-center mb-2">
                                                <span>Last Changed:</span>
                                                <span id="lastChangedText"><%= new Date(userData.updated_at).toLocaleDateString() %></span>
                                            </div>
                                            <div class="d-flex justify-content-between align-items-center">
                                                <span>Password Age:</span>
                                                <span id="passwordAgeText" data-updated="<%= userData.updated_at %>"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <h6>Quick Actions</h6>
                                        <div class="d-grid gap-2">
                                            <button class="btn btn-outline-info btn-sm" onclick="sendPasswordResetLink()">
                                                <i class="fas fa-paper-plane me-1"></i>
                                                Send Reset Link
                                            </button>
                                            <button class="btn btn-outline-secondary btn-sm" onclick="forcePasswordReset()">
                                                <i class="fas fa-exclamation-triangle me-1"></i>
                                                Force Reset on Login
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </main>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Password Management Functions
        function generateTemporaryPassword() {
            if (!confirm('Generate a temporary password for this user? They will be required to change it on next login.')) {
                return;
            }

            const tempPassword = generateSecurePassword(12);
            
            document.getElementById('new_password').value = tempPassword;
            document.getElementById('confirm_password').value = tempPassword;
            
            checkPasswordStrength(tempPassword);
            showToast(`Temporary password generated: ${tempPassword} - User will be required to change it on next login.`, 'info');
        }

        function generateSecurePassword(length = 12) {
            const charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*';
            let password = '';
            for (let i = 0; i < length; i++) {
                password += charset.charAt(Math.floor(Math.random() * charset.length));
            }
            return password;
        }

        function forcePasswordReset() {
            if (confirm('Force this user to reset their password on next login? This will log them out of all devices.')) {
                showToast('This feature would force password reset on next login. Implementation required.', 'info');
            }
        }

        function togglePasswordVisibility(fieldId) {
            const field = document.getElementById(fieldId);
            const icon = field.nextElementSibling.querySelector('i');
            
            if (field.type === 'password') {
                field.type = 'text';
                icon.className = 'fas fa-eye-slash';
            } else {
                field.type = 'password';
                icon.className = 'fas fa-eye';
            }
        }

        function sendPasswordResetLink() {
            if (confirm('Send password reset link to user\'s email?')) {
                showToast('This feature would send a password reset link. Implementation required.', 'info');
            }
        }

        function viewPasswordPolicy() {
            const policyHtml = `
                <div class="alert alert-info">
                    <h6><i class="fas fa-shield-alt me-2"></i>Password Policy</h6>
                    <ul class="mb-0">
                        <li>Minimum 6 characters in length</li>
                        <li>Recommended to include uppercase and lowercase letters</li>
                        <li>Recommended to include numbers and special characters</li>
                        <li>Cannot be the same as previous 3 passwords</li>
                        <li>Must be changed every 90 days</li>
                    </ul>
                </div>
            `;
            showToast('Password policy: Min 6 chars, mixed case, numbers, symbols recommended', 'info');
        }

        function checkPasswordStrength(password) {
            const strengthBar = document.getElementById('passwordStrength');
            const strengthText = document.getElementById('currentPasswordStrength');
            
            if (!password) {
                if (strengthBar) strengthBar.style.width = '0%';
                if (strengthText) strengthText.textContent = 'None';
                return;
            }

            let strength = 0;
            let feedback = [];

            if (password.length >= 8) strength += 25;
            else if (password.length >= 6) strength += 15;
            else feedback.push('Too short');

            if (password.match(/[a-z]/)) strength += 15;
            else feedback.push('Add lowercase letters');
            
            if (password.match(/[A-Z]/)) strength += 15;
            else feedback.push('Add uppercase letters');
            
            if (password.match(/[0-9]/)) strength += 15;
            else feedback.push('Add numbers');
            
            if (password.match(/[^a-zA-Z0-9]/)) strength += 15;
            else feedback.push('Add special characters');

            if (password.length >= 12) strength += 15;

            strength = Math.min(strength, 100);

            let color, text, bgColor;
            if (strength >= 80) {
                color = '#198754'; bgColor = '#198754'; text = 'Very Strong';
            } else if (strength >= 60) {
                color = '#198754'; bgColor = '#198754'; text = 'Strong';
            } else if (strength >= 40) {
                color = '#ffc107'; bgColor = '#ffc107'; text = 'Medium';
            } else if (strength >= 20) {
                color = '#fd7e14'; bgColor = '#fd7e14'; text = 'Weak';
            } else {
                color = '#dc3545'; bgColor = '#dc3545'; text = 'Very Weak';
            }

            if (strengthBar) {
                strengthBar.style.width = strength + '%';
                strengthBar.style.backgroundColor = bgColor;
            }
            
            if (strengthText) {
                strengthText.textContent = text;
                strengthText.className = `badge bg-${getStrengthColorClass(strength)}`;
            }
        }

        function getStrengthColorClass(strength) {
            if (strength >= 80) return 'success';
            if (strength >= 60) return 'success';
            if (strength >= 40) return 'warning';
            if (strength >= 20) return 'danger';
            return 'danger';
        }

        document.getElementById('confirm_password')?.addEventListener('input', function() {
            const newPassword = document.getElementById('new_password').value;
            const confirmPassword = this.value;
            const matchText = document.getElementById('passwordMatchText');
            
            if (!newPassword) {
                matchText.innerHTML = '<span class="text-muted">Enter new password first</span>';
                return;
            }
            
            if (confirmPassword && newPassword !== confirmPassword) {
                matchText.innerHTML = '<span class="text-danger"><i class="fas fa-times me-1"></i>Passwords do not match</span>';
            } else if (confirmPassword && newPassword === confirmPassword) {
                matchText.innerHTML = '<span class="text-success"><i class="fas fa-check me-1"></i>Passwords match</span>';
            } else {
                matchText.innerHTML = '<span class="text-muted">Confirm your password</span>';
            }
        });

        document.addEventListener('DOMContentLoaded', function() {
            // Update dynamic time displays
            const lastChangedElement = document.getElementById('lastChangedText');
            const passwordAgeElement = document.getElementById('passwordAgeText');
            
            if (lastChangedElement) {
                const lastChanged = new Date('<%= userData.updated_at %>');
                lastChangedElement.textContent = formatTimeAgo(lastChanged);
            }
            
            if (passwordAgeElement) {
                const passwordAge = calculatePasswordAge(new Date('<%= userData.updated_at %>'));
                passwordAgeElement.textContent = passwordAge;
            }

            // Password form validation
            const passwordForm = document.getElementById('passwordForm');
            if (passwordForm) {
                passwordForm.addEventListener('submit', function(e) {
                    const newPassword = document.getElementById('new_password').value;
                    const confirmPassword = document.getElementById('confirm_password').value;
                    
                    if (newPassword && newPassword !== confirmPassword) {
                        e.preventDefault();
                        showToast('Passwords do not match!', 'error');
                        return;
                    }
                    
                    if (newPassword && newPassword.length < 6) {
                        e.preventDefault();
                        showToast('Password must be at least 6 characters long!', 'error');
                        return;
                    }

                    const submitBtn = passwordForm.querySelector('button[type="submit"]');
                    const originalText = submitBtn.innerHTML;
                    submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i> Updating...';
                    submitBtn.disabled = true;

                    setTimeout(() => {
                        submitBtn.innerHTML = originalText;
                        submitBtn.disabled = false;
                    }, 3000);
                });
            }

            // Auto-dismiss alerts after 5 seconds
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                setTimeout(() => {
                    if (alert.parentNode) {
                        const bsAlert = new bootstrap.Alert(alert);
                        bsAlert.close();
                    }
                }, 5000);
            });
        });

        function calculatePasswordAge(passwordUpdatedAt) {
            if (!passwordUpdatedAt) return 'N/A';
            
            const updated = new Date(passwordUpdatedAt);
            const now = new Date();
            const diffTime = Math.abs(now - updated);
            const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
            
            return `${diffDays} day${diffDays !== 1 ? 's' : ''}`;
        }

        function formatTimeAgo(date) {
            if (!date) return 'Unknown time';
            
            const now = new Date();
            const diffMs = now - date;
            const diffMins = Math.floor(diffMs / 60000);
            const diffHours = Math.floor(diffMs / 3600000);
            const diffDays = Math.floor(diffMs / 86400000);

            if (diffMins < 1) return 'Just now';
            if (diffMins < 60) return `${diffMins} minute${diffMins > 1 ? 's' : ''} ago`;
            if (diffHours < 24) return `${diffHours} hour${diffHours > 1 ? 's' : ''} ago`;
            if (diffDays === 1) return 'Yesterday';
            if (diffDays < 7) return `${diffDays} day${diffDays > 1 ? 's' : ''} ago`;
            if (diffDays < 30) return `${Math.floor(diffDays / 7)} week${Math.floor(diffDays / 7) > 1 ? 's' : ''} ago`;
            return date.toLocaleDateString();
        }

        function showToast(message, type = 'info') {
            const toast = document.createElement('div');
            toast.className = `toast align-items-center text-white bg-${type === 'error' ? 'danger' : type} border-0`;
            toast.setAttribute('role', 'alert');
            toast.innerHTML = `
                <div class="d-flex">
                    <div class="toast-body">
                        <i class="fas fa-${type === 'success' ? 'check' : type === 'error' ? 'exclamation-triangle' : 'info'}-circle me-2"></i>
                        ${message}
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                </div>
            `;
            
            let toastContainer = document.querySelector('.toast-container');
            if (!toastContainer) {
                toastContainer = document.createElement('div');
                toastContainer.className = 'toast-container position-fixed top-0 end-0 p-3';
                document.body.appendChild(toastContainer);
            }
            
            toastContainer.appendChild(toast);
            const bsToast = new bootstrap.Toast(toast);
            bsToast.show();
            
            toast.addEventListener('hidden.bs.toast', () => {
                toast.remove();
            });
        }
    </script>
</body>
</html>