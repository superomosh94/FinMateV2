<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - FinMate</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="/css/dashboard.css" rel="stylesheet">
    <style>
        .income-preview {
            background: linear-gradient(135deg, #28a745, #20c997);
            color: white;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
        }
        .preview-amount {
            font-size: 2.5rem;
            font-weight: bold;
        }
        .preview-details {
            font-size: 1.1rem;
        }
        .status-pending { background-color: #ffc107; color: #000; }
        .status-cleared { background-color: #28a745; color: #fff; }
        .status-cancelled { background-color: #dc3545; color: #fff; }
    </style>
</head>
<body>
    <!-- Navigation -->
    <%- include('../../partials/header') %>

    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <%- include('../../partials/sidebar') %>

            <!-- Main Content -->
            <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
                <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                    <h1 class="h2">
                        <i class="fas fa-edit text-primary me-2"></i>
                        <%= title %>
                    </h1>
                    <div class="btn-toolbar mb-2 mb-md-0">
                        <a href="/user/incomes" class="btn btn-outline-secondary">
                            <i class="fas fa-arrow-left me-1"></i> Back to Incomes
                        </a>
                    </div>
                </div>

                <!-- Success/Error Messages -->
                <% if (success) { %>
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        <i class="fas fa-check-circle me-2"></i>
                        <%= message %>
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                <% } %>

                <% if (error) { %>
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        <%= error %>
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                <% } %>

                <!-- Income Preview -->
                <div class="income-preview">
                    <div class="row align-items-center">
                        <div class="col-md-6">
                            <div class="preview-amount" id="previewAmount">
                                Ksh <%= parseFloat(income.amount).toLocaleString('en-PH', {minimumFractionDigits: 2, maximumFractionDigits: 2}) %>
                            </div>
                            <div class="preview-details">
                                <strong id="previewTitle"><%= income.title %></strong>
                                <div id="previewSource"><%= income.source ? income.source.charAt(0).toUpperCase() + income.source.slice(1) : 'Not specified' %></div>
                            </div>
                        </div>
                        <div class="col-md-6 text-end">
                            <div class="badge bg-light text-dark fs-6 p-2">
                                <i class="fas fa-calendar me-1"></i>
                                <span id="previewDate"><%= new Date(income.received_date).toLocaleDateString() %></span>
                            </div>
                            <div class="mt-2">
                                <% 
                                function getStatusBadgeClass(status) {
                                    const classes = {
                                        'pending': 'status-pending',
                                        'cleared': 'status-cleared',
                                        'cancelled': 'status-cancelled'
                                    };
                                    return classes[status] || 'bg-secondary';
                                }
                                %>
                                <span class="badge <%= getStatusBadgeClass(income.status) %> fs-6 p-2" id="previewStatus">
                                    <%= income.status %>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Edit Income Form -->
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-edit me-2"></i>Edit Income Details
                        </h5>
                    </div>
                    <div class="card-body">
                        <form action="/user/incomes/edit/<%= income.id %>" method="POST">
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label for="title" class="form-label">Income Title *</label>
                                    <input type="text" class="form-control" id="title" name="title" 
                                           value="<%= income.title %>" required
                                           oninput="updatePreview('title', this.value)">
                                    <div class="form-text">e.g., Monthly Salary, Freelance Payment, etc.</div>
                                </div>

                                <div class="col-md-6 mb-3">
                                    <label for="amount" class="form-label">Amount *</label>
                                    <div class="input-group">
                                        <span class="input-group-text">Ksh </span>
                                        <input type="number" class="form-control" id="amount" name="amount" 
                                               step="0.01" min="0.01" value="<%= income.amount %>" required
                                               oninput="updatePreview('amount', this.value)">
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label for="source" class="form-label">Income Source</label>
                                    <select class="form-select" id="source" name="source"
                                            onchange="updatePreview('source', this.value)">
                                        <option value="">Select Source</option>
                                        <% sources.forEach(source => { %>
                                            <option value="<%= source %>" <%= income.source === source ? 'selected' : '' %>>
                                                <%= source.charAt(0).toUpperCase() + source.slice(1) %>
                                            </option>
                                        <% }) %>
                                    </select>
                                </div>

                                <div class="col-md-6 mb-3">
                                    <label for="category" class="form-label">Category</label>
                                    <select class="form-select" id="category" name="category">
                                        <option value="">Select Category</option>
                                        <% categories.forEach(category => { %>
                                            <option value="<%= category %>" <%= income.category === category ? 'selected' : '' %>>
                                                <%= category.split('-').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ') %>
                                            </option>
                                        <% }) %>
                                    </select>
                                </div>
                            </div>

                            <div class="mb-3">
                                <label for="description" class="form-label">Description</label>
                                <textarea class="form-control" id="description" name="description" rows="3"><%= income.description || '' %></textarea>
                            </div>

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label for="received_date" class="form-label">Received Date *</label>
                                    <input type="date" class="form-control" id="received_date" name="received_date" 
                                           value="<%= income.received_date %>" required
                                           onchange="updatePreview('date', this.value)">
                                </div>

                                <div class="col-md-6 mb-3">
                                    <label for="status" class="form-label">Status</label>
                                    <select class="form-select" id="status" name="status"
                                            onchange="updatePreview('status', this.value)">
                                        <option value="cleared" <%= income.status === 'cleared' ? 'selected' : '' %>>Cleared</option>
                                        <option value="pending" <%= income.status === 'pending' ? 'selected' : '' %>>Pending</option>
                                        <option value="cancelled" <%= income.status === 'cancelled' ? 'selected' : '' %>>Cancelled</option>
                                    </select>
                                </div>
                            </div>

                            <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                                <a href="/user/incomes" class="btn btn-secondary me-md-2">
                                    <i class="fas fa-times me-1"></i> Cancel
                                </a>
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-save me-1"></i> Update Income
                                </button>
                            </div>
                        </form>
                    </div>
                </div>

                <!-- Danger Zone -->
                <div class="card border-danger mt-4">
                    <div class="card-header bg-danger text-white">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-exclamation-triangle me-2"></i>Danger Zone
                        </h5>
                    </div>
                    <div class="card-body">
                        <p class="text-muted">Once you delete an income record, there is no going back. Please be certain.</p>
                        <form action="/user/incomes/delete/<%= income.id %>" method="POST" 
                              onsubmit="return confirm('Are you sure you want to delete this income record? This action cannot be undone.')">
                            <button type="submit" class="btn btn-outline-danger">
                                <i class="fas fa-trash me-1"></i> Delete This Income
                            </button>
                        </form>
                    </div>
                </div>
            </main>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        // Update preview in real-time
        function updatePreview(field, value) {
            switch(field) {
                case 'title':
                    document.getElementById('previewTitle').textContent = value;
                    break;
                case 'amount':
                    const amount = parseFloat(value) || 0;
                    document.getElementById('previewAmount').textContent = 
                        '₱' + amount.toLocaleString('en-PH', {minimumFractionDigits: 2, maximumFractionDigits: 2});
                    break;
                case 'source':
                    const sourceText = value ? value.charAt(0).toUpperCase() + value.slice(1) : 'Not specified';
                    document.getElementById('previewSource').textContent = sourceText;
                    break;
                case 'date':
                    const date = new Date(value);
                    document.getElementById('previewDate').textContent = date.toLocaleDateString();
                    break;
                case 'status':
                    const statusBadge = document.getElementById('previewStatus');
                    statusBadge.textContent = value;
                    // Update status badge class
                    const statusClasses = {
                        'pending': 'status-pending',
                        'cleared': 'status-cleared', 
                        'cancelled': 'status-cancelled'
                    };
                    statusBadge.className = `badge ${statusClasses[value] || 'bg-secondary'} fs-6 p-2`;
                    break;
            }
        }

        // Auto-dismiss alerts after 5 seconds
        setTimeout(() => {
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                const bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            });
        }, 5000);

        // Format currency input
        document.getElementById('amount').addEventListener('blur', function(e) {
            const value = parseFloat(e.target.value);
            if (!isNaN(value)) {
                e.target.value = value.toFixed(2);
            }
        });
    </script>
</body>
</html>